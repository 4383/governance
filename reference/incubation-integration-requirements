= Minimal requirements for incubation and integrated status =

== Incubation ==

The TC will evaluate the project scope and its complementarity with existing
integrated projects and other official programs, look into the project
technical choices, and check a number of requirements, including (but not
limited to):

* Scope
** Project must have a clear and defined scope
** Project should not inadvertently duplicate functionality present in other
   OpenStack projects. If they do, they should have a clear plan and timeframe
   to prevent long-term scope duplication.
** Project should leverage existing functionality in other OpenStack projects
   as much as possible

* Maturity
** Project should have an active team of contributors
** Project should not have a major architectural rewrite planned
** Project APIs should be reasonably stable

* Process
** Project must be hosted under stackforge (and therefore use git as its VCS)
** Project must obey OpenStack coordinated project interface (such as tox,
   pbr, global-requirements...)
** Project should use oslo libraries or oslo-incubator where appropriate
** If project is not part of an existing program, it needs to file for a new
   program concurrently with the Incubation request, and fill the corresponding
   requirements.
** Project must have a well-defined core review team, with reviews distributed
   amongst the team (and not being primarily done by one person)
** Reviews should follow the same criteria as OpenStack projects (2 +2s
   before +A)
** Project should use the official openstack lists for discussion

* QA
** Project must have a basic devstack-gate job set up

* Documentation / User support
** Project must have docs for developers who want to contribute to the project
** Project should have API documentation for devs who want to add to the API,
   updated when the code is updated

* Legal requirements
** Project must be licensed under the Apache License v2
** Project must have no library dependencies which effectively restrict how
   the project may be distributed or deployed [1]
** All contributors to the project must have signed the CLA
** Project must have no known trademark issues [2]

[1] https://wiki.openstack.org/wiki/LegalIssuesFAQ#Licensing_of_library_dependencies
[2] https://wiki.openstack.org/wiki/LegalIssuesFAQ#New_Project_Names


= Graduation to integrated =

At the end of every cycle, incubated projects go through a graduation review
to check if they are ready to be made an integral part of the next development
cycle and be included in the next OpenStack integrated release. The TC will
evaluate the technical maturity of the project and check a number of
requirements, including (but not limited to):

* Scope
** Project must not duplicate functionality present in other OpenStack projects,
   unless the project has intentionally done so with the intent of replacing it.
** In the case that a project has intentionally duplicated functionality of
   another project, or portion of a project, the new project must reach a level
   of functionality and maturity such that we are ready to deprecate the old
   code and remove it after a well defined deprecation cycle.  The deprecation
   plan agreed to by the PTLs of each affected project, including details for
   how users will be able to migrate from the old to the new, must be submitted
   to the TC for review as a part of the graduation review.

* Maturity
** Project must have a large and diverse team of contributors
** Project must have completed integration work with other integrated
   projects, as communicated by the TC when accepted into incubation (that
   includes Dashboard integration if applicable)

* Process
** Project must have a diverse core reviewers team (more than 4 people)
** Core reviewers must enforce a minimum of 2 +2s before accepting a change
** Project should have engaged with marketing team to check suitable official
   name
** Project must use OpenStack task, defect and design tracker(s)

* QA
** Project must be part of the integrated gate
** Project must have decent unit test and functional tests coverage
** Project must be compatible with all currently OpenStack-supported versions
   of Python
** Project should have a decent record of triaging incoming bugs

* Documentation / User support
** Project must have end-user docs such as API use, CLI use, Dashboard use
** Project should have installation docs providing install/deployment in an
   integrated manner similar to other OpenStack projects, including
   configuration reference information for all options
** Project should have a proven history of providing user support (on the
   openstack@ mailing list and on Ask OpenStack)

* Release management / Security
** Project must have followed at least two common milestones (follow the common
   cycle at least since X-2)
** Project must have had at least one of their milestones handled by the
   release management team (at least the X-3 milestone)
** Project must provide a 2+ person team that will handle the project specific
   vulnerability process [3]

[3] https://wiki.openstack.org/wiki/Vulnerability_Management
